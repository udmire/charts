global:
  # the default cluster domain suffix
  clusterDomain: &defaultClusterDomain cluster.local

config:
  server:
    httpListenPorts:
      - 8888
      - 8889
      - 8890
      - 8891
      - 8892
      - 8893
      - 8894
  serverBlocks: 
    log: |-
      resolver kube-dns.kube-system.svc.{{ .Values.global.clusterDomain }} valid=10s;

      # Loki Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 0) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Log Section
      location = /loki/api/v1/push {
        proxy_pass http://loki-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }
      location = /api/prom/push {
        proxy_pass http://loki-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }

      location = /loki/api/v1/tail {
        proxy_pass http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Scope-OrgID $orgId;
      }
      location = /api/prom/tail {
        proxy_pass http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Scope-OrgID $orgId;
      }

      location ~ /loki/api/.* {
        proxy_pass http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }
      location ~ /api/prom/.* {
        proxy_pass http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }

      location ~ /prometheus/api/v1/alerts.* {
        proxy_pass       http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }
      location ~ /prometheus/api/v1/rules.* {
        proxy_pass       http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }

      location ~ /compactor/.* {
        proxy_pass       http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100/$request_uri;
      }
      location ~ /distributor/.* {
        proxy_pass       http://loki-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100/$request_uri;
      }
      location ~ /ring {
        proxy_pass       http://loki-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100/$request_uri;
      }
      location ~ /ingester/.* {
        proxy_pass       http://loki-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100/$request_uri;
      }
      location ~ /ruler/.* {
        proxy_pass       http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }
      location ~ /scheduler/.* {
        proxy_pass       http://loki-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
      }

      # Log Section
      }

    metric: |-
      # Metric Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 1) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Metric Section
      location ~ /api/(v1|prom)/push {
        proxy_pass http://cortex-instance.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location ~ /api/(v1|prom)/(rules|alerts).* {
        proxy_pass http://cortex-instance.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location ~ /api/(v1|prom)/.* {
        proxy_pass http://cortex-instance.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }

      location /distributor/ {
        proxy_pass http://cortex-instance.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080/;
      }
      # Metric Section

      # Alertmanager Section
      location ~ /multitenant_alertmanager/.* {
        proxy_pass http://alert-alertmanager-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location ~ /alertmanager/.* {
        proxy_pass http://alert-alertmanager-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Alertmanager Section
      }

    trace: |-
      # Trace Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 2) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Tempo Section
      location = /jaeger/api/traces {
        proxy_pass http://tempo-distributor.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:14268/api/traces;
      }
      location = /zipkin/spans {
        proxy_pass http://tempo-distributor.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:9411/spans;
      }
      location ~ /api/.* {
        proxy_pass http://tempo-query-frontend.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3200$request_uri;
      }
      location /distributor/ {
        proxy_pass http://tempo-distributor.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3200;
      }
      location /compactor/ {
        proxy_pass http://tempo-compactor.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3200;
      }
      # Tempo Section
      }

    trace-push: |-
      # Alertmanager Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 3) }}
      listen {{ . }} http2;
      {{- end }}

      location / {
        grpc_pass tempo-distributor.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:4317;
      }
      }

    alert: |-
      # Alertmanager Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 4) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Alertmanager Section
      location ~ /multitenant_alertmanager/.* {
        proxy_pass http://alert-alertmanager-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location ~ /alertmanager/.* {
        proxy_pass http://alert-alertmanager-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Alertmanager Section
      }

    metric-mimir: |-
      # Metric Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 5) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Distributor for push, all_user_stats, ha_tracker
      location /api/v1/push {
        proxy_pass http://mimir-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location /distributor/ {
        proxy_pass http://mimir-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080/;
      }

      # Ingester for flush, shutdown, ring
      location /ingester/ {
        proxy_pass http://mimir-write.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080/;
      }

      # Query for data
      location ~ /prometheus/api/v1/(query|series|label|metadata|read|cardinality|status|).* {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }

      # Querier for user_stats
      location ~ /api/v1/user_stats {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Ruler for ring, rule_groups
      location ~ /ruler/.* {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Ruler for prometheus rules
      location ~ /prometheus/api/v1/(rules|alerts) {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Ruler for rules
      location ~ /prometheus/config/v1/rules.* {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # StoreGateway for ring, tenants
      location ~ /store-gateway/.* {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Comactor for ring
      location ~ /compactor/.* {
        proxy_pass http://mimir-read.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Metric Section
      }

    alert-mimir: |-
      # Alertmanager Section
      server {
      {{- with (index .Values.config.server.httpListenPorts 6) }}
      listen {{ . }};
      {{- end }}

      set $orgId $http_x_scope_orgid;
      if ($orgId = '') {
        set $orgId $remote_user;
      }
      if ($orgId = '') {
        set $orgId '1';
      }
      proxy_set_header X-Scope-OrgID $orgId;

      # Alertmanager Section
      location ~ /multitenant_alertmanager/.* {
        proxy_pass http://alertmimir-alertmanager-mimir-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location ~ /alertmanager.* {
        proxy_pass http://alertmimir-alertmanager-mimir-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      location /api/v1/alerts {
        proxy_pass http://alertmimir-alertmanager-mimir-alertmanager.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080$request_uri;
      }
      # Alertmanager Section
      }