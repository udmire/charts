{{- if .Values.ingester.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "loki.ingesterFullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loki.ingesterLabels" . | nindent 4 }}
    app.kubernetes.io/part-of: memberlist
  annotations:
    {{- toYaml .Values.ingester.annotations | nindent 4 }}
spec:
  {{- if not .Values.ingester.autoscaling.enabled }}
  replicas: {{ .Values.ingester.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "loki.ingesterSelectorLabels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.ingester.statefulStrategy | nindent 4 }}          
  podManagementPolicy: "{{ .Values.ingester.statefulSet.podManagementPolicy }}"
  serviceName: {{ template "loki.fullname" . }}-ingester-headless
  {{- if .Values.ingester.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if .Values.ingester.persistentVolume.annotations }}
        annotations:
          {{ toYaml .Values.ingester.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.ingester.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.ingester.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.ingester.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{ toYaml .Values.ingester.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.ingester.persistentVolume.size }}"
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "loki.ingesterSelectorLabels" . | nindent 8 }}
        app.kubernetes.io/part-of: memberlist
        {{- with .Values.ingester.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "loki.configChecksum" . }}
        {{- if .Values.ingester.podAnnotations }}
        {{- include "ContentRender" ( dict "value" .Values.ingester.podAnnotations "context" . ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.ingester.serviceAccount.name | default (include "loki.serviceAccountName" . ) }}
      {{- if .Values.ingester.priorityClassName }}
      priorityClassName: {{ .Values.ingester.priorityClassName }}
      {{- end }}
      {{- if .Values.ingester.securityContext.enabled }}
      securityContext: {{- omit .Values.ingester.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- toYaml .Values.ingester.initContainers | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.ingester.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.ingester.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.ingester.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.ingester.terminationGracePeriodSeconds }}
      volumes:
        {{- include "loki.configVolume" . | nindent 8 }}
        {{- if not .Values.ingester.persistentVolume.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
        {{- if .Values.ingester.extraVolumes }}
        {{- toYaml .Values.ingester.extraVolumes | nindent 8 }}
        {{- end }}
      containers:
        {{- if .Values.ingester.extraContainers }}
        {{- toYaml .Values.ingester.extraContainers | nindent 8 }}
        {{- end }}
        - name: ingester
          {{- include "Image" .Values.global.image.loki | nindent 10 }}
          args:
            - -config.file=/etc/loki/loki.yaml
            - -target=ingester
            {{- range $key, $value := .Values.ingester.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.ingester.extraVolumeMounts }}
            {{- toYaml .Values.ingester.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/loki/
            - name: storage
              mountPath: /loki
              {{- with .Values.ingester.persistentVolume.subPath }}
              subPath: {{ . }}
              {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.httpListenPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.config.server.grpcListenPort }}
              protocol: TCP
            - name: gossip
              containerPort: {{ .Values.config.memberlist.bindPort }}
              protocol: TCP
          {{- if .Values.ingester.startupProbe }}
          startupProbe:
            {{- toYaml .Values.ingester.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.ingester.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.ingester.livenessProbe | nindent 12 }}
          {{- end }}
          readinessProbe:
            {{- toYaml .Values.ingester.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.ingester.resources | nindent 12 }}
          {{- if .Values.ingester.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.ingester.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.ingester.env }}
          env:
            {{- toYaml .Values.ingester.env | nindent 12 }}
          {{- end }}
          {{- with .Values.ingester.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end -}}
