{{- if .Values.compactor.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "loki.compactorFullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loki.compactorLabels" . | nindent 4 }}
    app.kubernetes.io/part-of: memberlist
  annotations:
    {{- toYaml .Values.compactor.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.compactor.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "loki.compactorSelectorLabels" . | nindent 6 }}
      app.kubernetes.io/part-of: memberlist
  updateStrategy:
    {{- toYaml .Values.compactor.strategy | nindent 4 }}
  serviceName: {{ template "loki.fullname" . }}-compactor
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if .Values.compactor.persistentVolume.annotations }}
        annotations:
          {{ toYaml .Values.compactor.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.compactor.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.compactor.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.compactor.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{ toYaml .Values.compactor.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.compactor.persistentVolume.size }}"
  template:
    metadata:
      labels:
        {{- include "loki.compactorLabels" . | nindent 8 }}
        app.kubernetes.io/part-of: memberlist
        {{- with .Values.compactor.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "loki.configChecksum" . }}
        {{- if .Values.compactor.podAnnotations }}
        {{- include "contentRender" ( dict "value" .Values.compactor.podAnnotations "context" . ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.compactor.serviceAccount.name | default (include "loki.serviceAccountName" . ) }}
      {{- if .Values.compactor.priorityClassName }}
      priorityClassName: {{ .Values.compactor.priorityClassName }}
      {{- end }}
      {{- if .Values.compactor.securityContext.enabled }}
      securityContext: {{- omit .Values.compactor.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- toYaml .Values.compactor.initContainers | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.compactor.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.compactor.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.compactor.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.compactor.terminationGracePeriodSeconds }}
      volumes:
        {{- include "loki.configVolume" . | nindent 8 }}
        - name: storage
          persistentVolumeClaim:
            claimName: storage-{{ include "loki.compactorFullname" . }}
        {{- with .Values.compactor.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        {{- if .Values.compactor.extraContainers }}
        {{ toYaml .Values.compactor.extraContainers | nindent 8 }}
        {{- end }}
        - name: compactor
          {{- include "image" .Values.image.loki | nindent 10 }}
          args:
            - -config.file=/etc/loki/loki.yaml
            - -target=compactor
            {{- range $key, $value := .Values.compactor.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.compactor.extraVolumeMounts }}
            {{- toYaml .Values.compactor.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/loki/
            - name: storage
              mountPath: /data
              {{- if .Values.compactor.persistentVolume.subPath }}
              subPath: {{ .Values.compactor.persistentVolume.subPath }}
              {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ .Values.config.server.httpListenPort }}
              protocol: TCP
            - name: gossip
              containerPort: {{ .Values.config.memberlist.bindPort }}
              protocol: TCP
          startupProbe:
            {{- toYaml .Values.compactor.startupProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.compactor.livenessProbe | nindent 12 }}
          securityContext:
            {{- toYaml .Values.compactor.containerSecurityContext | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.compactor.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.compactor.resources | nindent 12 }}
          {{- if .Values.compactor.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.compactor.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.compactor.env }}
          env:
            {{- toYaml .Values.compactor.env | nindent 12 }}
          {{- end }}
{{- end }}